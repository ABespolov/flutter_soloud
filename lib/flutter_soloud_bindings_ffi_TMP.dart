// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
import 'dart:ffi' as ffi;

/// FFI bindings to SoLoud
class FlutterSoLoudFfi {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  FlutterSoLoudFfi(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  FlutterSoLoudFfi.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  /// @brief Set a dart function to call when the sound with [handle] handle ends
  /// @param callback the dart function. Must be global or a static class member:
  /// ```@pragma('vm:entry-point')
  /// void playEndedCallback(int handle) {
  /// // here the sound with [handle] has ended.
  /// // you can play again
  /// soLoudController.soLoudFFI.play(handle);
  /// // or dispose it
  /// soLoudController.soLoudFFI.stop(handle);
  /// }
  /// ```
  /// @param handle the handle to the sound
  /// @return true if success;
  int setPlayEndedCallback(
    ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.UnsignedInt)>>
        callback,
    int handle,
  ) {
    return _setPlayEndedCallback(
      callback,
      handle,
    );
  }

  late final _setPlayEndedCallbackPtr = _lookup<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<
                  ffi.NativeFunction<ffi.Void Function(ffi.UnsignedInt)>>,
              ffi.UnsignedInt)>>('setPlayEndedCallback');
  late final _setPlayEndedCallback = _setPlayEndedCallbackPtr.asFunction<
      int Function(
          ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.UnsignedInt)>>,
          int)>();
}
