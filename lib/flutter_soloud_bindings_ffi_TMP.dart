// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
import 'dart:ffi' as ffi;

/// FFI bindings to SoLoud
class FlutterSoLoudFfi {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  FlutterSoLoudFfi(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  FlutterSoLoudFfi.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  /// @brief Pause or unpause already loaded sound identified by [handle]
  /// @param handle the sound handle
  void pauseSwitch(
    int handle,
  ) {
    return _pauseSwitch(
      handle,
    );
  }

  late final _pauseSwitchPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.UnsignedInt)>>(
          'pauseSwitch');
  late final _pauseSwitch = _pauseSwitchPtr.asFunction<void Function(int)>();

  /// @brief Gets the pause state
  /// @param handle the sound handle
  /// @return true if paused
  int getPause(
    int handle,
  ) {
    return _getPause(
      handle,
    );
  }

  late final _getPausePtr =
      _lookup<ffi.NativeFunction<ffi.Int Function(ffi.UnsignedInt)>>(
          'getPause');
  late final _getPause = _getPausePtr.asFunction<int Function(int)>();
}
